@model Nop.Plugin.Misc.EmployeeManager.Models.EmployeeAddressModel
@using Nop.Plugin.Misc.EmployeeManager.Common

@{
    const string hideInfoBlockAttributeName = EmployeeManagerConstants.EMPLOYEE_CREATE_UPDATE_HIDE_INFO_BLOCK_ATTRIBUTE;
    var customer = await workContext.GetCurrentCustomerAsync();
    var hideInfoBlock = await genericAttributeService.GetAttributeAsync<bool>(customer, hideInfoBlockAttributeName);
}

<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <nop-cards id="employee-cards">
                <nop-card asp-name="employee-info" asp-icon="fas fa-info" asp-title="@T(EmployeeManagerConstants.EMPLOYEE_CREATE_UPDATE_INFO_CARD_TITLE)" asp-hide-block-attribute-name="@hideInfoBlockAttributeName" asp-hide="@hideInfoBlock">@await Html.PartialAsync("_EmployeeInfoInput.Info", Model)</nop-card>
            </nop-cards>
        </div>
    </div>
</section>

<script>
    async function loadStateProvinceData(countryId) {
        const response = await fetch(`/Admin/EmployeeManagerAdmin/GetStates/${countryId}`, {
            credentials: "same-origin"
        })

        if (response.ok) {
            const data = await response.json()
            const stateProviceDropdown = document.querySelector("#Address_StateProvinceId")
            stateProviceDropdown.disabled = false
            stateProviceDropdown.innerHTML = null;
            for (let stateProvince of data) {
                console.log(stateProvince)
                let stateProvinceOption = document.createElement('option')
                stateProvinceOption.textContent = stateProvince.Name
                stateProvinceOption.value = stateProvince.Id
                stateProviceDropdown.appendChild(stateProvinceOption)
            }
        }
    }

    document.querySelector("#Address_CountryId").addEventListener("change", async function (e) {
        const element = e.target
        await loadStateProvinceData(element.value)
    })

    document.querySelector("#delete_employee", async function (e) {

    })
</script>

@if (!(bool)ViewData["IsEditView"])
{
    <script>
        window.addEventListener("load", async function (e) {
            const element = document.querySelector('#Address_CountryId')
            await loadStateProvinceData(element.value)
        })
    </script>
}