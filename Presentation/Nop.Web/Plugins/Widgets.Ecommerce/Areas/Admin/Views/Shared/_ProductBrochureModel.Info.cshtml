@model ProductBrochureModel

<div class="card-body">

    @await Html.PartialAsync("Table", new DataTablesModel
        {
            Name = "productBrochure-grid",
            UrlRead = new DataUrl("ProductBrochureList", "ProductBrochure", new RouteValueDictionary { [nameof(Model.ProductBrochureSearchModel.ProductId)] = Model.ProductBrochureSearchModel.ProductId }),
            UrlDelete = new DataUrl("ProductBrochureDelete", "ProductBrochure", null),
            UrlUpdate = new DataUrl("ProductBrochureUpdate", "ProductBrochure", null),
            Length = Model.ProductBrochureSearchModel.PageSize,
            LengthMenu = Model.ProductBrochureSearchModel.AvailablePageSizes,
            ColumnCollection = new List<ColumnProperty>
                {
                new ColumnProperty(nameof(ProductBrochureModel.ButtonText))
                {
                    Title = T("Nop.Plugin.Widgets.Ecommerce.Areas.Admin.Models.ProductBrochure.ProductBrochureModel.Fields.ButtonText").Text,
                    Width = "200",
                    Editable = true,
                    EditType = EditType.String
                },
                new ColumnProperty(nameof(ProductBrochureModel.DisplayOrder))
                {
                    Title = T("Nop.Plugin.Widgets.Ecommerce.Areas.Admin.Models.ProductBrochure.ProductBrochureModel.Fields.DisplayOrder").Text,
                    Width = "100",
                    ClassName = NopColumnClassDefaults.CenterAll,
                    Editable = true,
                    EditType = EditType.Number
                },
                new ColumnProperty(nameof(ProductBrochureModel.IsActive))
                {
                    Title = T("Nop.Plugin.Widgets.Ecommerce.Areas.Admin.Models.ProductBrochure.ProductBrochureModel.Fields.IsActive").Text,
                    Width = "75",
                    ClassName = NopColumnClassDefaults.CenterAll,
                    Render = new RenderBoolean(),
                    Editable = true,
                    EditType = EditType.Checkbox
                },
                new ColumnProperty(nameof(ProductBrochureModel.Id))
                {
                    Title = T("Admin.Common.Edit").Text,
                    Width = "75",
                    ClassName =  NopColumnClassDefaults.Button,
                    Render = new RenderButtonsInlineEdit()
                },
                new ColumnProperty(nameof(ProductBrochureModel.Id))
                {
                    Title = T("Admin.Common.Delete").Text,
                    Width = "75",
                    Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                    ClassName = NopColumnClassDefaults.Button
                }
                }
        })


</div>
